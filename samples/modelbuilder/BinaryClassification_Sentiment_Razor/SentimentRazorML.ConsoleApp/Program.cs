// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.Threading.Tasks;
using SentimentRazorML.Model;

namespace SentimentRazorML.ConsoleApp
{
    class Program
    {
        static async Task Main(string[] args)
        {
            // // Training code used by ML.NET CLI and AutoML to generate the model
            //await ModelBuilder.CreateModel();

            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample();

            // Make a single prediction on the sample data and print results
            ModelOutput predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual Sentiment with predicted Sentiment from sample data...\n\n");
            Console.WriteLine($"SentimentText: {sampleData.SentimentText}");
            Console.WriteLine($"\n\nActual Sentiment: {sampleData.Sentiment} \nPredicted Sentiment: {predictionResult.Prediction}\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single row of dataset to try a single prediction
        private static ModelInput CreateSingleDataSample()
        {
            // Use first line of dataset as model input
            // You can replace this with new test data (hardcoded or from end-user application)
            ModelInput sampleForPrediction = new ModelInput
            {
                SentimentText = "Model Builder is cool!"
            };

            return sampleForPrediction;
        }
        #endregion
    }
}
