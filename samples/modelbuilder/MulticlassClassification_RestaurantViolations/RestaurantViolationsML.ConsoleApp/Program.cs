// This file was auto-generated by ML.NET Model Builder. 

using System;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.ML;
using RestaurantViolationsML.Model;

namespace RestaurantViolationsML.ConsoleApp
{
    class Program
    {
        static async Task Main(string[] args)
        {
            //await ModelBuilder.CreateModel();

            // Create single instance of sample data from first line of dataset for model input
            ModelInput sampleData = CreateSingleDataSample();

            // Make a single prediction on the sample data and print results
            ModelOutput predictionResult = ConsumeModel.Predict(sampleData);

            Console.WriteLine("Using model to make single prediction -- Comparing actual RiskCategory with predicted RiskCategory from sample data...\n\n");
            Console.WriteLine($"InspectionType: {sampleData.InspectionType}");
            Console.WriteLine($"ViolationDescription: {sampleData.ViolationDescription}");
            Console.WriteLine($"\n\nActual RiskCategory: {sampleData.RiskCategory} \nPredicted RiskCategory value {predictionResult.Prediction} \nPredicted RiskCategory scores: [{String.Join(",", predictionResult.Score)}]\n\n");
            Console.WriteLine("=============== End of process, hit any key to finish ===============");
            Console.ReadKey();
        }

        // Change this code to create your own sample data
        #region CreateSingleDataSample
        // Method to load single data sample to try a single prediction
        private static ModelInput CreateSingleDataSample()
        {

            // Use new test data
            ModelInput sampleForPrediction = new ModelInput
            {
                InspectionType = "Complaint",
                ViolationDescription = "Inadequate sewage or wastewater disposal"
            };

            return sampleForPrediction;
        }
        #endregion
    }
}
