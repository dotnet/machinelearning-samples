<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.AudioModule</name>
    </assembly>
    <member name="T:UnityEngine.Audio.AudioClipPlayable">
      <summary>
        <para>An implementation of IPlayable that controls an AudioClip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioClipPlayable.Create(UnityEngine.Playables.PlayableGraph,UnityEngine.AudioClip,System.Boolean)">
      <summary>
        <para>Creates an AudioClipPlayable in the PlayableGraph.</para>
      </summary>
      <param name="graph">The PlayableGraph that will contain the new AnimationLayerMixerPlayable.</param>
      <param name="clip">The AudioClip that will be added in the PlayableGraph.</param>
      <param name="looping">True if the clip should loop, false otherwise.</param>
      <returns>
        <para>A AudioClipPlayable linked to the PlayableGraph.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixer">
      <summary>
        <para>AudioMixer asset.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Audio.AudioMixer.outputAudioMixerGroup">
      <summary>
        <para>Routing target.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Audio.AudioMixer.updateMode">
      <summary>
        <para>How time should progress for this AudioMixer. Used during Snapshot transitions.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.ClearFloat(System.String)">
      <summary>
        <para>Resets an exposed parameter to its initial value.</para>
      </summary>
      <param name="name">Exposed parameter.</param>
      <returns>
        <para>Returns false if the parameter was not found or could not be set.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.FindMatchingGroups(System.String)">
      <summary>
        <para>Connected groups in the mixer form a path from the mixer's master group to the leaves. This path has the format "Master GroupChild of Master GroupGrandchild of Master Group", so to find the grandchild group in this example, a valid search string would be for instance "randchi" which would return exactly one group while "hild" or "oup/" would return 2 different groups.</para>
      </summary>
      <param name="subPath">Sub-string of the paths to be matched.</param>
      <returns>
        <para>Groups in the mixer whose paths match the specified search path.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.FindSnapshot(System.String)">
      <summary>
        <para>The name must be an exact match.</para>
      </summary>
      <param name="name">Name of snapshot object to be returned.</param>
      <returns>
        <para>The snapshot identified by the name.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.GetFloat(System.String,System.Single&amp;)">
      <summary>
        <para>Returns the value of the exposed parameter specified. If the parameter doesn't exist the function returns false. Prior to calling SetFloat and after ClearFloat has been called on this parameter the value returned will be that of the current snapshot or snapshot transition.</para>
      </summary>
      <param name="name">Name of exposed parameter.</param>
      <param name="value">Return value of exposed parameter.</param>
      <returns>
        <para>Returns false if the exposed parameter specified doesn't exist.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.SetFloat(System.String,System.Single)">
      <summary>
        <para>Sets the value of the exposed parameter specified. When a parameter is exposed, it is not controlled by mixer snapshots and can therefore only be changed via this function.</para>
      </summary>
      <param name="name">Name of exposed parameter.</param>
      <param name="value">New value of exposed parameter.</param>
      <returns>
        <para>Returns false if the exposed parameter was not found or snapshots are currently being edited.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixer.TransitionToSnapshots(UnityEngine.Audio.AudioMixerSnapshot[],System.Single[],System.Single)">
      <summary>
        <para>Transitions to a weighted mixture of the snapshots specified. This can be used for games that specify the game state as a continuum between states or for interpolating snapshots from a triangulated map location.</para>
      </summary>
      <param name="snapshots">The set of snapshots to be mixed.</param>
      <param name="weights">The mix weights for the snapshots specified.</param>
      <param name="timeToReach">Relative time after which the mixture should be reached from any current state.</param>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerGroup">
      <summary>
        <para>Object representing a group in the mixer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerPlayable">
      <summary>
        <para>An implementation of IPlayable that controls an audio mixer.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerSnapshot">
      <summary>
        <para>Object representing a snapshot in the mixer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioMixerSnapshot.TransitionTo(System.Single)">
      <summary>
        <para>Performs an interpolated transition towards this snapshot over the time interval specified.</para>
      </summary>
      <param name="timeToReach">Relative time after which this snapshot should be reached from any current state.</param>
    </member>
    <member name="T:UnityEngine.Audio.AudioMixerUpdateMode">
      <summary>
        <para>The mode in which an AudioMixer should update its time.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Audio.AudioMixerUpdateMode.Normal">
      <summary>
        <para>Update the AudioMixer with scaled game time.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.Audio.AudioMixerUpdateMode.UnscaledTime">
      <summary>
        <para>Update the AudioMixer with unscaled realtime.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Audio.AudioPlayableBinding">
      <summary>
        <para>A PlayableBinding that contains information representing an AudioPlayableOutput.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioPlayableBinding.Create(System.String,UnityEngine.Object)">
      <summary>
        <para>Creates a PlayableBinding that contains information representing an AudioPlayableOutput.</para>
      </summary>
      <param name="key">A reference to a UnityEngine.Object that acts as a key for this binding.</param>
      <param name="name">The name of the AudioPlayableOutput.</param>
      <returns>
        <para>Returns a PlayableBinding that contains information that is used to create an AudioPlayableOutput.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Audio.AudioPlayableOutput">
      <summary>
        <para>A IPlayableOutput implementation that will be used to play audio.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioPlayableOutput.Create(UnityEngine.Playables.PlayableGraph,System.String,UnityEngine.AudioSource)">
      <summary>
        <para>Creates an AudioPlayableOutput in the PlayableGraph.</para>
      </summary>
      <param name="graph">The PlayableGraph that will contain the AnimationPlayableOutput.</param>
      <param name="name">The name of the output.</param>
      <param name="target">The AudioSource that will play the AudioPlayableOutput source Playable.</param>
      <returns>
        <para>A new AudioPlayableOutput attached to the PlayableGraph.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.Audio.AudioPlayableOutput.GetEvaluateOnSeek">
      <summary>
        <para>Gets the state of output playback when seeking.</para>
      </summary>
      <returns>
        <para>Returns true if the output plays when seeking. Returns false otherwise.</para>
      </returns>
    </member>
    <member name="P:UnityEngine.Audio.AudioPlayableOutput.Null">
      <summary>
        <para>Returns an invalid AudioPlayableOutput.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Audio.AudioPlayableOutput.SetEvaluateOnSeek(System.Boolean)">
      <summary>
        <para>Controls whether the output should play when seeking.</para>
      </summary>
      <param name="value">Set to true to play the output when seeking. Set to false to disable audio scrubbing on this output. Default is true.</param>
    </member>
    <member name="T:UnityEngine.AudioChorusFilter">
      <summary>
        <para>The Audio Chorus Filter takes an Audio Clip and processes it creating a chorus effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.delay">
      <summary>
        <para>Chorus delay in ms. 0.1 to 100.0. Default = 40.0 ms.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.depth">
      <summary>
        <para>Chorus modulation depth. 0.0 to 1.0. Default = 0.03.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.dryMix">
      <summary>
        <para>Volume of original signal to pass to output. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.feedback">
      <summary>
        <para>Chorus feedback. Controls how much of the wet signal gets fed back into the chorus buffer. 0.0 to 1.0. Default = 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.rate">
      <summary>
        <para>Chorus modulation rate in hz. 0.0 to 20.0. Default = 0.8 hz.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix1">
      <summary>
        <para>Volume of 1st chorus tap. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix2">
      <summary>
        <para>Volume of 2nd chorus tap. This tap is 90 degrees out of phase of the first tap. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioChorusFilter.wetMix3">
      <summary>
        <para>Volume of 3rd chorus tap. This tap is 90 degrees out of phase of the second tap. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioClip">
      <summary>
        <para>A container for audio data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.ambisonic">
      <summary>
        <para>Returns true if this audio clip is ambisonic (read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.channels">
      <summary>
        <para>The number of channels in the audio clip. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.frequency">
      <summary>
        <para>The sample frequency of the clip in Hertz. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.isReadyToPlay">
      <summary>
        <para>Returns true if the AudioClip is ready to play (read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.length">
      <summary>
        <para>The length of the audio clip in seconds. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.loadInBackground">
      <summary>
        <para>Corresponding to the "Load In Background" flag in the inspector, when this flag is set, the loading will happen delayed without blocking the main thread.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.loadState">
      <summary>
        <para>Returns the current load state of the audio data associated with an AudioClip.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.loadType">
      <summary>
        <para>The load type of the clip (read-only).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.preloadAudioData">
      <summary>
        <para>Preloads audio data of the clip when the clip asset is loaded. When this flag is off, scripts have to call AudioClip.LoadAudioData() to load the data before the clip can be played. Properties like length, channels and format are available before the audio data has been loaded.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioClip.samples">
      <summary>
        <para>The length of the audio clip in samples. (Read Only)</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback,UnityEngine.AudioClip/PCMSetPositionCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.Create(System.String,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,UnityEngine.AudioClip/PCMReaderCallback,UnityEngine.AudioClip/PCMSetPositionCallback)">
      <summary>
        <para>Creates a user AudioClip with a name and with the given length in samples, channels and frequency.</para>
      </summary>
      <param name="name">Name of clip.</param>
      <param name="lengthSamples">Number of sample frames.</param>
      <param name="channels">Number of channels per frame.</param>
      <param name="frequency">Sample frequency of clip.</param>
      <param name="_3D">Audio clip is played back in 3D.</param>
      <param name="stream">True if clip is streamed, that is if the pcmreadercallback generates data on the fly.</param>
      <param name="pcmreadercallback">This callback is invoked to generate a block of sample data. Non-streamed clips call this only once at creation time while streamed clips call this continuously.</param>
      <param name="pcmsetpositioncallback">This callback is invoked whenever the clip loops or changes playback position.</param>
      <returns>
        <para>A reference to the created AudioClip.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioClip.GetData(System.Single[],System.Int32)">
      <summary>
        <para>Fills an array with sample data from the clip.</para>
      </summary>
      <param name="data"></param>
      <param name="offsetSamples"></param>
    </member>
    <member name="M:UnityEngine.AudioClip.LoadAudioData">
      <summary>
        <para>Loads the audio data of a clip. Clips that have "Preload Audio Data" set will load the audio data automatically.</para>
      </summary>
      <returns>
        <para>Returns true if loading succeeded.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioClip.PCMReaderCallback">
      <summary>
        <para>Delegate called each time AudioClip reads data.</para>
      </summary>
      <param name="data">Array of floats containing data read from the clip.</param>
    </member>
    <member name="T:UnityEngine.AudioClip.PCMSetPositionCallback">
      <summary>
        <para>Delegate called each time AudioClip changes read position.</para>
      </summary>
      <param name="position">New position in the audio clip.</param>
    </member>
    <member name="M:UnityEngine.AudioClip.SetData(System.Single[],System.Int32)">
      <summary>
        <para>Set sample data in a clip.</para>
      </summary>
      <param name="data"></param>
      <param name="offsetSamples"></param>
    </member>
    <member name="M:UnityEngine.AudioClip.UnloadAudioData">
      <summary>
        <para>Unloads the audio data associated with the clip. This works only for AudioClips that are based on actual sound file assets.</para>
      </summary>
      <returns>
        <para>Returns false if unloading failed.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioClipLoadType">
      <summary>
        <para>Determines how the audio clip is loaded in.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioClipLoadType.CompressedInMemory">
      <summary>
        <para>The audio data of the clip will be kept in memory in compressed form.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioClipLoadType.DecompressOnLoad">
      <summary>
        <para>The audio data is decompressed when the audio clip is loaded.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioClipLoadType.Streaming">
      <summary>
        <para>Streams audio data from disk.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioCompressionFormat">
      <summary>
        <para>An enum containing different compression types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.AAC">
      <summary>
        <para>AAC Audio Compression.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.ADPCM">
      <summary>
        <para>Adaptive differential pulse-code modulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.ATRAC9">
      <summary>
        <para>Sony proprietary hardware format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.GCADPCM">
      <summary>
        <para>Nintendo ADPCM audio compression format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.HEVAG">
      <summary>
        <para>Sony proprietory hardware codec.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.MP3">
      <summary>
        <para>MPEG Audio Layer III.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.PCM">
      <summary>
        <para>Uncompressed pulse-code modulation.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.VAG">
      <summary>
        <para>Sony proprietary hardware format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.Vorbis">
      <summary>
        <para>Vorbis compression format.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioCompressionFormat.XMA">
      <summary>
        <para>Xbox One proprietary hardware format.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioConfiguration">
      <summary>
        <para>Specifies the current properties or desired properties to be set for the audio system.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.dspBufferSize">
      <summary>
        <para>The length of the DSP buffer in samples determining the latency of sounds by the audio output device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.numRealVoices">
      <summary>
        <para>The current maximum number of simultaneously audible sounds in the game.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.numVirtualVoices">
      <summary>
        <para>The  maximum number of managed sounds in the game. Beyond this limit sounds will simply stop playing.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.sampleRate">
      <summary>
        <para>The current sample rate of the audio output device used.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioConfiguration.speakerMode">
      <summary>
        <para>The current speaker mode used by the audio output device.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioDataLoadState">
      <summary>
        <para>Value describing the current load state of the audio data associated with an AudioClip.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Failed">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that has failed loading its audio data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Loaded">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that has succeeded loading its audio data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Loading">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that is currently loading audio data.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioDataLoadState.Unloaded">
      <summary>
        <para>Value returned by AudioClip.loadState for an AudioClip that has no audio data loaded and where loading has not been initiated yet.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioDistortionFilter">
      <summary>
        <para>The Audio Distortion Filter distorts the sound from an AudioSource or sounds reaching the AudioListener.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioDistortionFilter.distortionLevel">
      <summary>
        <para>Distortion value. 0.0 to 1.0. Default = 0.5.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioEchoFilter">
      <summary>
        <para>The Audio Echo Filter repeats a sound after a given Delay, attenuating the repetitions based on the Decay Ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.decayRatio">
      <summary>
        <para>Echo decay per delay. 0 to 1. 1.0 = No decay, 0.0 = total decay (i.e. simple 1 line delay). Default = 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.delay">
      <summary>
        <para>Echo delay in ms. 10 to 5000. Default = 500.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.dryMix">
      <summary>
        <para>Volume of original signal to pass to output. 0.0 to 1.0. Default = 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioEchoFilter.wetMix">
      <summary>
        <para>Volume of echo signal to pass to output. 0.0 to 1.0. Default = 1.0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioHighPassFilter">
      <summary>
        <para>The Audio High Pass Filter passes high frequencies of an AudioSource, and cuts off signals with frequencies lower than the Cutoff Frequency.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioHighPassFilter.cutoffFrequency">
      <summary>
        <para>Highpass cutoff frequency in hz. 10.0 to 22000.0. Default = 5000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioHighPassFilter.highpassResonanceQ">
      <summary>
        <para>Determines how much the filter's self-resonance isdampened.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioListener">
      <summary>
        <para>Representation of a listener in 3D space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioListener.pause">
      <summary>
        <para>The paused state of the audio system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioListener.velocityUpdateMode">
      <summary>
        <para>This lets you set whether the Audio Listener should be updated in the fixed or dynamic update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioListener.volume">
      <summary>
        <para>Controls the game sound volume (0.0 to 1.0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioListener.GetOutputData(System.Single[],System.Int32)">
      <summary>
        <para>Provides a block of the listener (master)'s output data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
    </member>
    <member name="M:UnityEngine.AudioListener.GetOutputData(System.Int32,System.Int32)">
      <summary>
        <para>Deprecated Version. Returns a block of the listener (master)'s output data.</para>
      </summary>
      <param name="numSamples"></param>
      <param name="channel"></param>
    </member>
    <member name="M:UnityEngine.AudioListener.GetSpectrumData(System.Single[],System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Provides a block of the listener (master)'s spectrum data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="M:UnityEngine.AudioListener.GetSpectrumData(System.Int32,System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Deprecated Version. Returns a block of the listener (master)'s spectrum data.</para>
      </summary>
      <param name="numSamples">Number of values (the length of the samples array). Must be a power of 2. Min = 64. Max = 8192.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="T:UnityEngine.AudioLowPassFilter">
      <summary>
        <para>The Audio Low Pass Filter passes low frequencies of an AudioSource or all sounds reaching an AudioListener, while removing frequencies higher than the Cutoff Frequency.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.customCutoffCurve">
      <summary>
        <para>Returns or sets the current custom frequency cutoff curve.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.cutoffFrequency">
      <summary>
        <para>Lowpass cutoff frequency in hz. 10.0 to 22000.0. Default = 5000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioLowPassFilter.lowpassResonanceQ">
      <summary>
        <para>Determines how much the filter's self-resonance is dampened.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioRenderer">
      <summary>
        <para>Allow recording the main output of the game or specific groups in the AudioMixer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioRenderer.GetSampleCountForCaptureFrame">
      <summary>
        <para>Returns the number of samples available since the last time AudioRenderer.Render was called. This is dependent on the frame capture rate.</para>
      </summary>
      <returns>
        <para>Number of samples available since last recorded frame.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioRenderer.Render(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Performs the recording of the main output as well as any optional mixer groups that have been registered via AudioRenderer.AddMixerGroupSink.</para>
      </summary>
      <param name="buffer">The buffer to write the sample data to.</param>
      <returns>
        <para>True if the recording succeeded.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioRenderer.Start">
      <summary>
        <para>Enters audio recording mode. After this Unity will output silence until AudioRenderer.Stop is called.</para>
      </summary>
      <returns>
        <para>True if the engine was switched into output recording mode. False if it is already recording.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioRenderer.Stop">
      <summary>
        <para>Exits audio recording mode. After this audio output will be audible again.</para>
      </summary>
      <returns>
        <para>True if the engine was recording when this function was called.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioReverbFilter">
      <summary>
        <para>The Audio Reverb Filter takes an Audio Clip and distorts it to create a custom reverb effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.decayHFRatio">
      <summary>
        <para>Decay HF Ratio : High-frequency to low-frequency decay time ratio. Ranges from 0.1 to 2.0. Default is 0.5.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.decayTime">
      <summary>
        <para>Reverberation decay time at low-frequencies in seconds. Ranges from 0.1 to 20.0. Default is 1.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.density">
      <summary>
        <para>Reverberation density (modal density) in percent. Ranges from 0.0 to 100.0. Default is 100.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.diffusion">
      <summary>
        <para>Reverberation diffusion (echo density) in percent. Ranges from 0.0 to 100.0. Default is 100.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.dryLevel">
      <summary>
        <para>Mix level of dry signal in output in millibels (mB). Ranges from -10000.0 to 0.0. Default is 0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.hfReference">
      <summary>
        <para>Reference high frequency in hertz (Hz). Ranges from 1000.0 to 20000.0. Default is 5000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.lfReference">
      <summary>
        <para>Reference low-frequency in hertz (Hz). Ranges from 20.0 to 1000.0. Default is 250.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reflectionsDelay">
      <summary>
        <para>Late reverberation level relative to room effect in millibels (mB). Ranges from -10000.0 to 2000.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reflectionsLevel">
      <summary>
        <para>Early reflections level relative to room effect in millibels (mB). Ranges from -10000.0 to 1000.0. Default is -10000.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbDelay">
      <summary>
        <para>Late reverberation delay time relative to first reflection in seconds. Ranges from 0.0 to 0.1. Default is 0.04.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbLevel">
      <summary>
        <para>Late reverberation level relative to room effect in millibels (mB). Ranges from -10000.0 to 2000.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.reverbPreset">
      <summary>
        <para>Set/Get reverb preset properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.room">
      <summary>
        <para>Room effect level at low frequencies in millibels (mB). Ranges from -10000.0 to 0.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomHF">
      <summary>
        <para>Room effect high-frequency level re. low frequency level in millibels (mB). Ranges from -10000.0 to 0.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbFilter.roomLF">
      <summary>
        <para>Room effect low-frequency level in millibels (mB). Ranges from -10000.0 to 0.0. Default is 0.0.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioReverbPreset">
      <summary>
        <para>Reverb presets used by the Reverb Zone class and the audio reverb filter.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Alley">
      <summary>
        <para>Alley preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Arena">
      <summary>
        <para>Arena preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Auditorium">
      <summary>
        <para>Auditorium preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Bathroom">
      <summary>
        <para>Bathroom preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.CarpetedHallway">
      <summary>
        <para>Carpeted hallway preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Cave">
      <summary>
        <para>Cave preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.City">
      <summary>
        <para>City preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Concerthall">
      <summary>
        <para>Concert hall preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Dizzy">
      <summary>
        <para>Dizzy preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Drugged">
      <summary>
        <para>Drugged preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Forest">
      <summary>
        <para>Forest preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Generic">
      <summary>
        <para>Generic preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Hallway">
      <summary>
        <para>Hallway preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Hangar">
      <summary>
        <para>Hangar preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Livingroom">
      <summary>
        <para>Livingroom preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Mountains">
      <summary>
        <para>Mountains preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Off">
      <summary>
        <para>No reverb preset selected.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.PaddedCell">
      <summary>
        <para>Padded cell preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.ParkingLot">
      <summary>
        <para>Parking Lot preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Plain">
      <summary>
        <para>Plain preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Psychotic">
      <summary>
        <para>Psychotic preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Quarry">
      <summary>
        <para>Quarry preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Room">
      <summary>
        <para>Room preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.SewerPipe">
      <summary>
        <para>Sewer pipe preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.StoneCorridor">
      <summary>
        <para>Stone corridor preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Stoneroom">
      <summary>
        <para>Stoneroom preset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.Underwater">
      <summary>
        <para>Underwater presset.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioReverbPreset.User">
      <summary>
        <para>User defined preset.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioReverbZone">
      <summary>
        <para>Reverb Zones are used when you want to create location based ambient effects in the Scene.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.decayHFRatio">
      <summary>
        <para>High-frequency to mid-frequency decay time ratio.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.decayTime">
      <summary>
        <para>Reverberation decay time at mid frequencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.density">
      <summary>
        <para>Value that controls the modal density in the late reverberation decay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.diffusion">
      <summary>
        <para>Value that controls the echo density in the late reverberation decay.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.maxDistance">
      <summary>
        <para>The distance from the centerpoint that the reverb will not have any effect. Default = 15.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.minDistance">
      <summary>
        <para>The distance from the centerpoint that the reverb will have full effect at. Default = 10.0.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reflections">
      <summary>
        <para>Early reflections level relative to room effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reflectionsDelay">
      <summary>
        <para>Initial reflection delay time.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverb">
      <summary>
        <para>Late reverberation level relative to room effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverbDelay">
      <summary>
        <para>Late reverberation delay time relative to initial reflection.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.reverbPreset">
      <summary>
        <para>Set/Get reverb preset properties.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.room">
      <summary>
        <para>Room effect level (at mid frequencies).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomHF">
      <summary>
        <para>Relative room effect level at high frequencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomLF">
      <summary>
        <para>Relative room effect level at low frequencies.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.roomRolloffFactor">
      <summary>
        <para>Like rolloffscale in global settings, but for reverb room size effect.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.HFReference">
      <summary>
        <para>Reference high frequency (hz).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioReverbZone.LFReference">
      <summary>
        <para>Reference low frequency (hz).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioRolloffMode">
      <summary>
        <para>Rolloff modes that a 3D sound can have in an audio source.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioRolloffMode.Custom">
      <summary>
        <para>Use this when you want to use a custom rolloff.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioRolloffMode.Linear">
      <summary>
        <para>Use this mode when you want to lower the volume of your sound over the distance.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioRolloffMode.Logarithmic">
      <summary>
        <para>Use this mode when you want a real-world rolloff.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSettings">
      <summary>
        <para>Controls the global audio settings from script.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.driverCapabilities">
      <summary>
        <para>Returns the speaker mode capability of the current audio driver. (Read Only)</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.dspTime">
      <summary>
        <para>Returns the current time of the audio system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.outputSampleRate">
      <summary>
        <para>Get the mixer's current output rate.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSettings.speakerMode">
      <summary>
        <para>Gets the current speaker mode. Default is 2 channel stereo.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSettings.AudioConfigurationChangeHandler">
      <summary>
        <para>A delegate called whenever the global audio settings are changed, either by AudioSettings.Reset or by an external device change such as the OS control panel changing the sample rate or because the default output device was changed, for example when plugging in an HDMI monitor or a USB headset.</para>
      </summary>
      <param name="deviceWasChanged">True if the change was caused by an device change.</param>
    </member>
    <member name="M:UnityEngine.AudioSettings.GetConfiguration">
      <summary>
        <para>Returns the current configuration of the audio device and system. The values in the struct may then be modified and reapplied via AudioSettings.Reset.</para>
      </summary>
      <returns>
        <para>The new configuration to be applied.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSettings.GetDSPBufferSize(System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Get the mixer's buffer size in samples.</para>
      </summary>
      <param name="bufferLength">Is the length of each buffer in the ringbuffer.</param>
      <param name="numBuffers">Is number of buffers.</param>
    </member>
    <member name="M:UnityEngine.AudioSettings.GetSpatializerPluginName">
      <summary>
        <para>Returns the name of the spatializer selected on the currently-running platform.</para>
      </summary>
      <returns>
        <para>The spatializer plugin name.</para>
      </returns>
    </member>
    <member name="?:UnityEngine.AudioSettings.OnAudioConfigurationChanged(UnityEngine.AudioSettings/AudioConfigurationChangeHandler)">
      <summary>
        <para>A delegate called whenever the global audio settings are changed, either by AudioSettings.Reset or by an external factor such as the OS control panel changing the sample rate or because the default output device was changed, for example when plugging in an HDMI monitor or a USB headset.</para>
      </summary>
      <param name="value">True if the change was caused by an device change.</param>
    </member>
    <member name="M:UnityEngine.AudioSettings.Reset(UnityEngine.AudioConfiguration)">
      <summary>
        <para>Performs a change of the device configuration. In response to this the AudioSettings.OnAudioConfigurationChanged delegate is invoked with the argument deviceWasChanged=false. It cannot be guaranteed that the exact settings specified can be used, but the an attempt is made to use the closest match supported by the system.</para>
      </summary>
      <param name="config">The new configuration to be used.</param>
      <returns>
        <para>True if all settings could be successfully applied.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.AudioSource">
      <summary>
        <para>A representation of audio sources in 3D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassEffects">
      <summary>
        <para>Bypass effects (Applied from filter components or global listener filters).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassListenerEffects">
      <summary>
        <para>When set global effects on the AudioListener will not be applied to the audio signal generated by the AudioSource. Does not apply if the AudioSource is playing into a mixer group.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.bypassReverbZones">
      <summary>
        <para>When set doesn't route the signal from an AudioSource into the global reverb associated with reverb zones.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.clip">
      <summary>
        <para>The default AudioClip to play.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.dopplerLevel">
      <summary>
        <para>Sets the Doppler scale for this AudioSource.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.ignoreListenerPause">
      <summary>
        <para>Allows AudioSource to play even though AudioListener.pause is set to true. This is useful for the menu element sounds or background music in pause menus.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.ignoreListenerVolume">
      <summary>
        <para>This makes the audio source not take into account the volume of the audio listener.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.isPlaying">
      <summary>
        <para>Is the clip playing right now (Read Only)?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.isVirtual">
      <summary>
        <para>True if all sounds played by the AudioSource (main sound started by Play() or playOnAwake as well as one-shots) are culled by the audio system.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.loop">
      <summary>
        <para>Is the audio clip looping?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.maxDistance">
      <summary>
        <para>(Logarithmic rolloff) MaxDistance is the distance a sound stops attenuating at.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.minDistance">
      <summary>
        <para>Within the Min distance the AudioSource will cease to grow louder in volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.mute">
      <summary>
        <para>Un- / Mutes the AudioSource. Mute sets the volume=0, Un-Mute restore the original volume.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.outputAudioMixerGroup">
      <summary>
        <para>The target group to which the AudioSource should route its signal.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.panStereo">
      <summary>
        <para>Pans a playing sound in a stereo way (left or right). This only applies to sounds that are Mono or Stereo.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.pitch">
      <summary>
        <para>The pitch of the audio source.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.playOnAwake">
      <summary>
        <para>If set to true, the audio source will automatically start playing on awake.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.priority">
      <summary>
        <para>Sets the priority of the AudioSource.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.reverbZoneMix">
      <summary>
        <para>The amount by which the signal from the AudioSource will be mixed into the global reverb associated with the Reverb Zones.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.rolloffMode">
      <summary>
        <para>Sets/Gets how the AudioSource attenuates over distance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spatialBlend">
      <summary>
        <para>Sets how much this AudioSource is affected by 3D spatialisation calculations (attenuation, doppler etc). 0.0 makes the sound full 2D, 1.0 makes it full 3D.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spatialize">
      <summary>
        <para>Enables or disables spatialization.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spatializePostEffects">
      <summary>
        <para>Determines if the spatializer effect is inserted before or after the effect filters.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.spread">
      <summary>
        <para>Sets the spread angle (in degrees) of a 3d stereo or multichannel sound in speaker space.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.time">
      <summary>
        <para>Playback position in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.timeSamples">
      <summary>
        <para>Playback position in PCM samples.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.velocityUpdateMode">
      <summary>
        <para>Whether the Audio Source should be updated in the fixed or dynamic update.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.AudioSource.volume">
      <summary>
        <para>The volume of the audio source (0.0 to 1.0).</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioSource.GetAmbisonicDecoderFloat(System.Int32,System.Single&amp;)">
      <summary>
        <para>Reads a user-defined parameter of a custom ambisonic decoder effect that is attached to an AudioSource.</para>
      </summary>
      <param name="index">Zero-based index of user-defined parameter to be read.</param>
      <param name="value">Return value of the user-defined parameter that is read.</param>
      <returns>
        <para>True, if the parameter could be read.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.GetCustomCurve(UnityEngine.AudioSourceCurveType)">
      <summary>
        <para>Get the current custom curve for the given AudioSourceCurveType.</para>
      </summary>
      <param name="type">The curve type to get.</param>
      <returns>
        <para>The custom AnimationCurve corresponding to the given curve type.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.GetOutputData(System.Single[],System.Int32)">
      <summary>
        <para>Provides a block of the currently playing source's output data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.GetOutputData(System.Int32,System.Int32)">
      <summary>
        <para>Deprecated Version. Returns a block of the currently playing source's output data.</para>
      </summary>
      <param name="numSamples"></param>
      <param name="channel"></param>
    </member>
    <member name="M:UnityEngine.AudioSource.GetSpatializerFloat(System.Int32,System.Single&amp;)">
      <summary>
        <para>Reads a user-defined parameter of a custom spatializer effect that is attached to an AudioSource.</para>
      </summary>
      <param name="index">Zero-based index of user-defined parameter to be read.</param>
      <param name="value">Return value of the user-defined parameter that is read.</param>
      <returns>
        <para>True, if the parameter could be read.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.GetSpectrumData(System.Single[],System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Provides a block of the currently playing audio source's spectrum data.</para>
      </summary>
      <param name="samples">The array to populate with audio samples. Its length must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.GetSpectrumData(System.Int32,System.Int32,UnityEngine.FFTWindow)">
      <summary>
        <para>Deprecated Version. Returns a block of the currently playing source's spectrum data.</para>
      </summary>
      <param name="numSamples">The number of samples to retrieve. Must be a power of 2.</param>
      <param name="channel">The channel to sample from.</param>
      <param name="window">The FFTWindow type to use when sampling.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.Pause">
      <summary>
        <para>Pauses playing the clip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioSource.Play()">
      <summary>
        <para>Plays the clip.</para>
      </summary>
      <param name="delay">Deprecated. Delay in number of samples, assuming a 44100Hz sample rate (meaning that Play(44100) will delay the playing by exactly 1 sec).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.Play(System.UInt64)">
      <summary>
        <para>Plays the clip.</para>
      </summary>
      <param name="delay">Deprecated. Delay in number of samples, assuming a 44100Hz sample rate (meaning that Play(44100) will delay the playing by exactly 1 sec).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayClipAtPoint(UnityEngine.AudioClip,UnityEngine.Vector3)">
      <summary>
        <para>Plays an AudioClip at a given position in world space.</para>
      </summary>
      <param name="clip">Audio data to play.</param>
      <param name="position">Position in world space from which sound originates.</param>
      <param name="volume">Playback volume.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayClipAtPoint(UnityEngine.AudioClip,UnityEngine.Vector3,System.Single)">
      <summary>
        <para>Plays an AudioClip at a given position in world space.</para>
      </summary>
      <param name="clip">Audio data to play.</param>
      <param name="position">Position in world space from which sound originates.</param>
      <param name="volume">Playback volume.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayDelayed(System.Single)">
      <summary>
        <para>Plays the clip with a delay specified in seconds. Users are advised to use this function instead of the old Play(delay) function that took a delay specified in samples relative to a reference rate of 44.1 kHz as an argument.</para>
      </summary>
      <param name="delay">Delay time specified in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayOneShot(UnityEngine.AudioClip)">
      <summary>
        <para>Plays an AudioClip, and scales the AudioSource volume by volumeScale.</para>
      </summary>
      <param name="clip">The clip being played.</param>
      <param name="volumeScale">The scale of the volume (0-1).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayOneShot(UnityEngine.AudioClip,System.Single)">
      <summary>
        <para>Plays an AudioClip, and scales the AudioSource volume by volumeScale.</para>
      </summary>
      <param name="clip">The clip being played.</param>
      <param name="volumeScale">The scale of the volume (0-1).</param>
    </member>
    <member name="M:UnityEngine.AudioSource.PlayScheduled(System.Double)">
      <summary>
        <para>Plays the clip at a specific time on the absolute time-line that AudioSettings.dspTime reads from.</para>
      </summary>
      <param name="time">Time in seconds on the absolute time-line that AudioSettings.dspTime refers to for when the sound should start playing.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetAmbisonicDecoderFloat(System.Int32,System.Single)">
      <summary>
        <para>Sets a user-defined parameter of a custom ambisonic decoder effect that is attached to an AudioSource.</para>
      </summary>
      <param name="index">Zero-based index of user-defined parameter to be set.</param>
      <param name="value">New value of the user-defined parameter.</param>
      <returns>
        <para>True, if the parameter could be set.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.SetCustomCurve(UnityEngine.AudioSourceCurveType,UnityEngine.AnimationCurve)">
      <summary>
        <para>Set the custom curve for the given AudioSourceCurveType.</para>
      </summary>
      <param name="type">The curve type that should be set.</param>
      <param name="curve">The curve that should be applied to the given curve type.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetScheduledEndTime(System.Double)">
      <summary>
        <para>Changes the time at which a sound that has already been scheduled to play will end. Notice that depending on the timing not all rescheduling requests can be fulfilled.</para>
      </summary>
      <param name="time">Time in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetScheduledStartTime(System.Double)">
      <summary>
        <para>Changes the time at which a sound that has already been scheduled to play will start.</para>
      </summary>
      <param name="time">Time in seconds.</param>
    </member>
    <member name="M:UnityEngine.AudioSource.SetSpatializerFloat(System.Int32,System.Single)">
      <summary>
        <para>Sets a user-defined parameter of a custom spatializer effect that is attached to an AudioSource.</para>
      </summary>
      <param name="index">Zero-based index of user-defined parameter to be set.</param>
      <param name="value">New value of the user-defined parameter.</param>
      <returns>
        <para>True, if the parameter could be set.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.AudioSource.Stop">
      <summary>
        <para>Stops playing the clip.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.AudioSource.UnPause">
      <summary>
        <para>Unpause the paused playback of this AudioSource.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSourceCurveType">
      <summary>
        <para>This defines the curve type of the different custom curves that can be queried and set within the AudioSource.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.CustomRolloff">
      <summary>
        <para>Custom Volume Rolloff.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.ReverbZoneMix">
      <summary>
        <para>Reverb Zone Mix.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.SpatialBlend">
      <summary>
        <para>The Spatial Blend.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSourceCurveType.Spread">
      <summary>
        <para>The 3D Spread.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioSpeakerMode">
      <summary>
        <para>These are speaker types defined for use with AudioSettings.speakerMode.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Mode5point1">
      <summary>
        <para>Channel count is set to 6. 5.1 speaker setup. This includes front left, front right, center, rear left, rear right and a subwoofer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Mode7point1">
      <summary>
        <para>Channel count is set to 8. 7.1 speaker setup. This includes front left, front right, center, rear left, rear right, side left, side right and a subwoofer.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Mono">
      <summary>
        <para>Channel count is set to 1. The speakers are monaural.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Prologic">
      <summary>
        <para>Channel count is set to 2. Stereo output, but data is encoded in a way that is picked up by a Prologic/Prologic2 decoder and split into a 5.1 speaker setup.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Quad">
      <summary>
        <para>Channel count is set to 4. 4 speaker setup. This includes front left, front right, rear left, rear right.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Raw">
      <summary>
        <para>Channel count is unaffected.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Stereo">
      <summary>
        <para>Channel count is set to 2. The speakers are stereo. This is the editor default.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioSpeakerMode.Surround">
      <summary>
        <para>Channel count is set to 5. 5 speaker setup. This includes front left, front right, center, rear left, rear right.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.AudioVelocityUpdateMode">
      <summary>
        <para>Describes when an AudioSource or AudioListener is updated.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioVelocityUpdateMode.Auto">
      <summary>
        <para>Updates the source or listener in the MonoBehaviour.FixedUpdate loop if it is attached to a Rigidbody, dynamic MonoBehaviour.Update otherwise.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioVelocityUpdateMode.Dynamic">
      <summary>
        <para>Updates the source or listener in the dynamic MonoBehaviour.Update loop.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.AudioVelocityUpdateMode.Fixed">
      <summary>
        <para>Updates the source or listener in the MonoBehaviour.FixedUpdate loop.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Audio.AudioSampleProvider">
      <summary>
        <para>Provides access to the audio samples generated by Unity objects such as VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.availableSampleFrameCount">
      <summary>
        <para>Number of sample frames available for consuming with Experimental.Audio.AudioSampleProvider.ConsumeSampleFrames.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.channelCount">
      <summary>
        <para>The number of audio channels per sample frame.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.consumeSampleFramesNativeFunction">
      <summary>
        <para>Pointer to the native function that provides access to audio sample frames.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.enableSampleFramesAvailableEvents">
      <summary>
        <para>Enables the Experimental.Audio.AudioSampleProvider.sampleFramesAvailable events.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.enableSilencePadding">
      <summary>
        <para>If true, buffers produced by ConsumeSampleFrames will get padded when silence if there are less available than asked for. Otherwise, the extra sample frames in the buffer will be left unchanged.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.freeSampleFrameCount">
      <summary>
        <para>Number of sample frames that can still be written to by the sample producer before overflowing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.freeSampleFrameCountLowThreshold">
      <summary>
        <para>Then the free sample count falls below this threshold, the Experimental.Audio.AudioSampleProvider.sampleFramesAvailable event and associated native is emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.id">
      <summary>
        <para>Unique identifier for this instance.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.maxSampleFrameCount">
      <summary>
        <para>The maximum number of sample frames that can be accumulated inside the internal buffer before an overflow event is emitted.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.owner">
      <summary>
        <para>Object where this provider came from.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Experimental.Audio.AudioSampleProvider.sampleFramesAvailable(UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler)">
      <summary>
        <para>Invoked when the number of available sample frames goes beyond the threshold set with Experimental.Audio.AudioSampleProvider.freeSampleFrameCountLowThreshold.</para>
      </summary>
      <param name="value">Number of available sample frames.</param>
    </member>
    <member name="?:UnityEngine.Experimental.Audio.AudioSampleProvider.sampleFramesOverflow(UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesHandler)">
      <summary>
        <para>Invoked when the number of available sample frames goes beyond the maximum that fits in the internal buffer.</para>
      </summary>
      <param name="value">The number of sample frames that were dropped due to the overflow.</param>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.sampleRate">
      <summary>
        <para>The expected playback rate for the sample frames produced by this class.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.trackIndex">
      <summary>
        <para>Index of the track in the object that created this provider.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Experimental.Audio.AudioSampleProvider.valid">
      <summary>
        <para>True if the object is valid.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Audio.AudioSampleProvider.ClearSampleFramesAvailableNativeHandler">
      <summary>
        <para>Clear the native handler set with Experimental.Audio.AudioSampleProvider.SetSampleFramesAvailableNativeHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Audio.AudioSampleProvider.ClearSampleFramesOverflowNativeHandler">
      <summary>
        <para>Clear the native handler set with Experimental.Audio.AudioSampleProvider.SetSampleFramesOverflowNativeHandler.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Experimental.Audio.AudioSampleProvider.ConsumeSampleFrames(Unity.Collections.NativeArray`1&lt;System.Single&gt;)">
      <summary>
        <para>Consume sample frames from the internal buffer.</para>
      </summary>
      <param name="sampleFrames">Buffer where the consumed samples will be transferred.</param>
      <returns>
        <para>How many sample frames were written into the buffer passed in.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.Experimental.Audio.AudioSampleProvider.ConsumeSampleFramesNativeFunction">
      <summary>
        <para>Type that represents the native function pointer for consuming sample frames.</para>
      </summary>
      <param name="providerId">Id of the provider. See Experimental.Audio.AudioSampleProvider.id.</param>
      <param name="interleavedSampleFrames">Pointer to the sample frames buffer to fill. The actual C type is float*.</param>
      <param name="sampleFrameCount">Number of sample frames that can be written into interleavedSampleFrames.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Audio.AudioSampleProvider.Dispose">
      <summary>
        <para>Release internal resources. Inherited from IDisposable.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Experimental.Audio.AudioSampleProvider.SampleFramesEventNativeFunction">
      <summary>
        <para>Type that represents the native function pointer for handling sample frame events.</para>
      </summary>
      <param name="userData">User data specified when the handler was set. The actual C type is void*.</param>
      <param name="providerId">Id of the provider. See Experimental.Audio.AudioSampleProvider.id.</param>
      <param name="sampleFrameCount">Number of sample frames available or overflowed, depending on event type.</param>
    </member>
    <member name="T:UnityEngine.Experimental.Audio.AudioSampleProvider.SampleFramesHandler">
      <summary>
        <para>Delegate for sample frame events.</para>
      </summary>
      <param name="provider">Provider emitting the event.</param>
      <param name="sampleFrameCount">How many sample frames are available, or were dropped, depending on the event.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Audio.AudioSampleProvider.SetSampleFramesAvailableNativeHandler(UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesEventNativeFunction,System.IntPtr)">
      <summary>
        <para>Set the native event handler for events emitted when the number of available sample frames crosses the threshold.</para>
      </summary>
      <param name="handler">Pointer to the function to invoke when the event is emitted.</param>
      <param name="userData">User data to be passed to the handler when invoked. The actual C type is void*.</param>
    </member>
    <member name="M:UnityEngine.Experimental.Audio.AudioSampleProvider.SetSampleFramesOverflowNativeHandler(UnityEngine.Experimental.Audio.AudioSampleProvider/SampleFramesEventNativeFunction,System.IntPtr)">
      <summary>
        <para>Set the native event handler for events emitted when the internal sample frame buffer overflows.</para>
      </summary>
      <param name="handler">Pointer to the function to invoke when the event is emitted.</param>
      <param name="userData">User data to be passed to the handler when invoked. The actual C type is void*.</param>
    </member>
    <member name="T:UnityEngine.FFTWindow">
      <summary>
        <para>Spectrum analysis windowing types.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Blackman">
      <summary>
        <para>W[n] = 0.42 - (0.5 * COS(nN) ) + (0.08 * COS(2.0 * nN) ).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.BlackmanHarris">
      <summary>
        <para>W[n] = 0.35875 - (0.48829 * COS(1.0 * nN)) + (0.14128 * COS(2.0 * nN)) - (0.01168 * COS(3.0 * n/N)).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Hamming">
      <summary>
        <para>W[n] = 0.54 - (0.46 * COS(n/N) ).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Hanning">
      <summary>
        <para>W[n] = 0.5 * (1.0 - COS(n/N) ).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Rectangular">
      <summary>
        <para>W[n] = 1.0.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.FFTWindow.Triangle">
      <summary>
        <para>W[n] = TRI(2n/N).</para>
      </summary>
    </member>
    <member name="T:UnityEngine.Microphone">
      <summary>
        <para>Use this class to record to an AudioClip using a connected microphone.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Microphone.devices">
      <summary>
        <para>A list of available microphone devices, identified by name.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Microphone.End(System.String)">
      <summary>
        <para>Stops recording.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.GetDeviceCaps(System.String,System.Int32&amp;,System.Int32&amp;)">
      <summary>
        <para>Get the frequency capabilities of a device.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
      <param name="minFreq">Returns the minimum sampling frequency of the device.</param>
      <param name="maxFreq">Returns the maximum sampling frequency of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.GetPosition(System.String)">
      <summary>
        <para>Get the position in samples of the recording.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.IsRecording(System.String)">
      <summary>
        <para>Query if a device is currently recording.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
    </member>
    <member name="M:UnityEngine.Microphone.Start(System.String,System.Boolean,System.Int32,System.Int32)">
      <summary>
        <para>Start Recording with device.</para>
      </summary>
      <param name="deviceName">The name of the device.</param>
      <param name="loop">Indicates whether the recording should continue recording if lengthSec is reached, and wrap around and record from the beginning of the AudioClip.</param>
      <param name="lengthSec">Is the length of the AudioClip produced by the recording.</param>
      <param name="frequency">The sample rate of the AudioClip produced by the recording.</param>
      <returns>
        <para>The function returns null if the recording fails to start.</para>
      </returns>
    </member>
    <member name="T:UnityEngine.MovieTexture">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.audioClip">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.duration">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.isPlaying">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.isReadyToPlay">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.MovieTexture.loop">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MovieTexture.Pause">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MovieTexture.Play">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.MovieTexture.Stop">
      <summary>
        <para>MovieTexture has been deprecated. Refer to the new movie playback solution VideoPlayer.</para>
      </summary>
    </member>
    <member name="A:UnityEngine.AudioModule">
      <summary>
        <para>The Audio module implements Unity's audio system.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WebCamDevice">
      <summary>
        <para>A structure describing the webcam device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.availableResolutions">
      <summary>
        <para>Possible WebCamTexture resolutions for this device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.depthCameraName">
      <summary>
        <para>A string identifier used to create a depth data based WebCamTexture.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.isAutoFocusPointSupported">
      <summary>
        <para>Returns true if the camera supports automatic focusing on points of interest and false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.isFrontFacing">
      <summary>
        <para>True if camera faces the same direction a screen does, false otherwise.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.kind">
      <summary>
        <para>Property of type WebCamKind denoting the kind of webcam device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamDevice.name">
      <summary>
        <para>A human-readable name of the device. Varies across different systems.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WebCamKind">
      <summary>
        <para>Enum representing the different types of web camera device.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WebCamKind.ColorAndDepth">
      <summary>
        <para>Camera which supports synchronized color and depth data (currently these are only dual back and true depth cameras on latest iOS devices).</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WebCamKind.Telephoto">
      <summary>
        <para>A Telephoto camera device. These devices have a longer focal length than a wide-angle camera.</para>
      </summary>
    </member>
    <member name="F:UnityEngine.WebCamKind.WideAngle">
      <summary>
        <para>Wide angle (default) camera.</para>
      </summary>
    </member>
    <member name="T:UnityEngine.WebCamTexture">
      <summary>
        <para>WebCam Textures are textures onto which the live video input is rendered.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.autoFocusPoint">
      <summary>
        <para>This property allows you to set/get the auto focus point of the camera. This works only on Android and iOS devices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.deviceName">
      <summary>
        <para>Set this to specify the name of the device to use.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.devices">
      <summary>
        <para>Return a list of available devices.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.didUpdateThisFrame">
      <summary>
        <para>Did the video buffer update this frame?</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.isDepth">
      <summary>
        <para>This property is true if the texture is based on depth data.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.isPlaying">
      <summary>
        <para>Returns if the camera is currently playing.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedFPS">
      <summary>
        <para>Set the requested frame rate of the camera device (in frames per second).</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedHeight">
      <summary>
        <para>Set the requested height of the camera device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.requestedWidth">
      <summary>
        <para>Set the requested width of the camera device.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.videoRotationAngle">
      <summary>
        <para>Returns an clockwise angle (in degrees), which can be used to rotate a polygon so camera contents are shown in correct orientation.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.WebCamTexture.videoVerticallyMirrored">
      <summary>
        <para>Returns if the texture image is vertically flipped.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.String)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.String,System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.#ctor(System.String,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Create a WebCamTexture.</para>
      </summary>
      <param name="deviceName">The name of the video input device to be used.</param>
      <param name="requestedWidth">The requested width of the texture.</param>
      <param name="requestedHeight">The requested height of the texture.</param>
      <param name="requestedFPS">The requested frame rate of the texture.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixel(System.Int32,System.Int32)">
      <summary>
        <para>Returns pixel color at coordinates (x, y).</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels">
      <summary>
        <para>Get a block of pixel colors.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
        <para>Get a block of pixel colors.</para>
      </summary>
      <param name="x"></param>
      <param name="y"></param>
      <param name="blockWidth"></param>
      <param name="blockHeight"></param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels32()">
      <summary>
        <para>Returns the pixels data in raw format.</para>
      </summary>
      <param name="colors">Optional array to receive pixel data.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.GetPixels32(UnityEngine.Color32[])">
      <summary>
        <para>Returns the pixels data in raw format.</para>
      </summary>
      <param name="colors">Optional array to receive pixel data.</param>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Pause">
      <summary>
        <para>Pauses the camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Play">
      <summary>
        <para>Starts the camera.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.WebCamTexture.Stop">
      <summary>
        <para>Stops the camera.</para>
      </summary>
    </member>
  </members>
</doc>
