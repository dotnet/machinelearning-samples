<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.DirectorModule</name>
    </assembly>
    <member name="T:UnityEngine.Playables.PlayableDirector">
      <summary>
        <para>Instantiates a PlayableAsset and controls playback of Playable objects.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.duration">
      <summary>
        <para>The duration of the Playable in seconds.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.extrapolationMode">
      <summary>
        <para>Controls how the time is incremented when it goes beyond the duration of the playable.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.initialTime">
      <summary>
        <para>The time at which the Playable should start when first played.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Playables.PlayableDirector.paused(System.Action`1&lt;UnityEngine.Playables.PlayableDirector&gt;)">
      <summary>
        <para>Event that is raised when a PlayableDirector component has paused.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.playableAsset">
      <summary>
        <para>The PlayableAsset that is used to instantiate a playable for playback.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.playableGraph">
      <summary>
        <para>The PlayableGraph created by the PlayableDirector.</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Playables.PlayableDirector.played(System.Action`1&lt;UnityEngine.Playables.PlayableDirector&gt;)">
      <summary>
        <para>Event that is raised when a PlayableDirector component has begun playing.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.playOnAwake">
      <summary>
        <para>Whether the playable asset will start playing back as soon as the component awakes.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.state">
      <summary>
        <para>The current playing state of the component. (Read Only)</para>
      </summary>
    </member>
    <member name="?:UnityEngine.Playables.PlayableDirector.stopped(System.Action`1&lt;UnityEngine.Playables.PlayableDirector&gt;)">
      <summary>
        <para>Event that is raised when a PlayableDirector component has stopped.</para>
      </summary>
      <param name="value"></param>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.time">
      <summary>
        <para>The component's current time. This value is incremented according to the PlayableDirector.timeUpdateMode when it is playing. You can also change this value manually.</para>
      </summary>
    </member>
    <member name="P:UnityEngine.Playables.PlayableDirector.timeUpdateMode">
      <summary>
        <para>Controls how time is incremented when playing back.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.ClearGenericBinding(UnityEngine.Object)">
      <summary>
        <para>Clears the binding of a reference object.</para>
      </summary>
      <param name="key">The source object in the PlayableBinding.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.ClearReferenceValue(UnityEngine.PropertyName)">
      <summary>
        <para>Clears an exposed reference value.</para>
      </summary>
      <param name="id">Identifier of the ExposedReference.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.DeferredEvaluate">
      <summary>
        <para>Tells the PlayableDirector to evaluate it's PlayableGraph on the next update.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Evaluate">
      <summary>
        <para>Evaluates the currently playing Playable at  the current time.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.GetGenericBinding(UnityEngine.Object)">
      <summary>
        <para>Returns a binding to a reference object.</para>
      </summary>
      <param name="key">The object that acts as a key.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.GetReferenceValue(UnityEngine.PropertyName,System.Boolean&amp;)">
      <summary>
        <para>Retreives an ExposedReference binding.</para>
      </summary>
      <param name="id">Identifier of the ExposedReference.</param>
      <param name="idValid">Whether the reference was found.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Pause">
      <summary>
        <para>Pauses playback of the currently running playable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Play(UnityEngine.Playables.PlayableAsset,UnityEngine.Playables.DirectorWrapMode)">
      <summary>
        <para>Instatiates a Playable using the provided PlayableAsset and starts playback.</para>
      </summary>
      <param name="asset">An asset to instantiate a playable from.</param>
      <param name="mode">What to do when the time passes the duration of the playable.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Play(UnityEngine.Playables.PlayableAsset)">
      <summary>
        <para>Instatiates a Playable using the provided PlayableAsset and starts playback.</para>
      </summary>
      <param name="asset">An asset to instantiate a playable from.</param>
      <param name="mode">What to do when the time passes the duration of the playable.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Play">
      <summary>
        <para>Instatiates a Playable using the provided PlayableAsset and starts playback.</para>
      </summary>
      <param name="asset">An asset to instantiate a playable from.</param>
      <param name="mode">What to do when the time passes the duration of the playable.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.RebindPlayableGraphOutputs">
      <summary>
        <para>Rebinds each PlayableOutput of the PlayableGraph.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.RebuildGraph">
      <summary>
        <para>Discards the existing PlayableGraph and creates a new instance.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Resume">
      <summary>
        <para>Resume playing a paused playable.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.SetGenericBinding(UnityEngine.Object,UnityEngine.Object)">
      <summary>
        <para>Sets the binding of a reference object from a PlayableBinding.</para>
      </summary>
      <param name="key">The source object in the PlayableBinding.</param>
      <param name="value">The object to bind to the key.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.SetReferenceValue(UnityEngine.PropertyName,UnityEngine.Object)">
      <summary>
        <para>Sets an ExposedReference value.</para>
      </summary>
      <param name="id">Identifier of the ExposedReference.</param>
      <param name="value">The object to bind to set the reference value to.</param>
    </member>
    <member name="M:UnityEngine.Playables.PlayableDirector.Stop">
      <summary>
        <para>Stops playback of the current Playable and destroys the corresponding graph.</para>
      </summary>
    </member>
    <member name="A:UnityEngine.DirectorModule">
      <summary>
        <para>The Director module implements the PlayableDirector class.</para>
      </summary>
    </member>
  </members>
</doc>
