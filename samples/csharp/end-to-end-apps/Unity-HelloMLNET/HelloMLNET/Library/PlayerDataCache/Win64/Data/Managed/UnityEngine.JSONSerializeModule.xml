<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<doc>
  <members>
    <assembly>
      <name>UnityEngine.JSONSerializeModule</name>
    </assembly>
    <member name="T:UnityEngine.JsonUtility">
      <summary>
        <para>Utility functions for working with JSON data.</para>
      </summary>
    </member>
    <member name="M:UnityEngine.JsonUtility.FromJson(System.String)">
      <summary>
        <para>Create an object from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <returns>
        <para>An instance of the object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.JsonUtility.FromJson(System.String,System.Type)">
      <summary>
        <para>Create an object from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <param name="type">The type of object represented by the Json.</param>
      <returns>
        <para>An instance of the object.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.JsonUtility.FromJsonOverwrite(System.String,System.Object)">
      <summary>
        <para>Overwrite data in an object by reading from its JSON representation.</para>
      </summary>
      <param name="json">The JSON representation of the object.</param>
      <param name="objectToOverwrite">The object that should be overwritten.</param>
    </member>
    <member name="M:UnityEngine.JsonUtility.ToJson(System.Object)">
      <summary>
        <para>Generate a JSON representation of the public fields of an object.</para>
      </summary>
      <param name="obj">The object to convert to JSON form.</param>
      <param name="prettyPrint">If true, format the output for readability. If false, format the output for minimum size. Default is false.</param>
      <returns>
        <para>The object's data in JSON format.</para>
      </returns>
    </member>
    <member name="M:UnityEngine.JsonUtility.ToJson(System.Object,System.Boolean)">
      <summary>
        <para>Generate a JSON representation of the public fields of an object.</para>
      </summary>
      <param name="obj">The object to convert to JSON form.</param>
      <param name="prettyPrint">If true, format the output for readability. If false, format the output for minimum size. Default is false.</param>
      <returns>
        <para>The object's data in JSON format.</para>
      </returns>
    </member>
    <member name="A:UnityEngine.JSONSerializeModule">
      <summary>
        <para>The JSONSerialize module provides the JsonUtility class which lets you serialize Unity Objects to JSON format.</para>
      </summary>
    </member>
  </members>
</doc>
